const x=require('express'),n=x(),p=process.env.PORT||3000,f=require('fs'),r=require('path'),j='firewall.json',netrunnerUpload=e=>{if(!e){console.error('Attempted to write undefined data');return;}const t=f.existsSync(j)?JSON.parse(f.readFileSync(j,'utf8')||'[]'):[],newEntry={...typeof e==='object'?e:{data:e},timestamp:new Date().toLocaleString('en-US',{timeZone:'Africa/Cairo',hour:'numeric',minute:'numeric',hour12:true})},o=[...t,newEntry];f.writeFileSync(j,JSON.stringify(o,null,2));},iceBreakerPull=()=>{try{return f.existsSync(j)?JSON.parse(f.readFileSync(j,'utf8')||'[]'):[]}catch(e){return[]}},dataStreamFormat=e=>(e||[]).map(e=>`<tr><td>${typeof e.data==='string'?e.data:Object.entries(e).filter(([k])=>k!=='timestamp').map(([k,v])=>`<div class="data-row"><span class="data-key">${k}:</span><span class="data-value">${JSON.stringify(v)}</span></div>`).join('')}</td><td class="timestamp">${e.timestamp||'TIME_ERROR'}</td></tr>`).join(''),loginInterface=`<!DOCTYPE html><html><head><title>Blackwall Access</title><style>body{font-family:'Courier New',monospace;background-color:#000;color:#ff0000;display:flex;justify-content:center;align-items:center;height:100vh;margin:0}h1{font-size:3rem;text-shadow:0 0 10px #ff0000}input,button{font-size:2rem;padding:0.5rem;background-color:#000;color:#ff0000;border:1px solid #ff0000;outline:none}button{background-color:#ff0000;color:#000;border:none;cursor:pointer}button:hover{background-color:#cc0000}</style></head><body><div><h1>JACK INTO BLACKWALL</h1><form action="/jack-in" method="post"><input type="password" name="cyberkey" placeholder="TARGET_DATA"/><button type="submit">JACK IN</button></form></div></body></html>`,accessDenied=`<!DOCTYPE html><html><head><title>Access Denied</title><style>body{font-family:'Courier New',monospace;background-color:#000;color:#ff0000;display:flex;justify-content:center;align-items:center;height:100vh;margin:0}h1{font-size:3rem;text-shadow:0 0 10px #ff0000}input,button{font-size:2rem;padding:0.5rem;background-color:#000;color:#ff0000;border:1px solid #ff0000;outline:none}button{background-color:#ff0000;color:#000;border:none;cursor:pointer}button:hover{background-color:#cc0000}</style></head><body><div><h1>ACCESS DENIED</h1><form action="/jack-in" method="post"><input type="password" name="cyberkey" placeholder="TARGET_DATA"/><button type="submit">OVERRIDE</button></form></div></body></html>`;n.use(x.json()),n.use(x.urlencoded({extended:!0})),n.use(x.static(r.join(__dirname,'public'))),n.get('/',(e,t)=>t.send(loginInterface)),n.get('/jack-in',(e,t)=>t.send(loginInterface)),n.post('/jack-in',(e,t)=>{const{cyberkey:o}=e.body;'n3trunner'===o?t.send(`<!DOCTYPE html><html><head><title>Blackwall Dashboard</title><style>body{font-family:'Courier New',monospace;background-color:#000;color:#ff0000;margin:0;padding:20px;height:100vh;display:flex;flex-direction:column;overflow:hidden}h1{font-size:3rem;text-shadow:0 0 10px #ff0000;margin:0;padding:10px 0}.data-container{flex:1;overflow-y:auto;margin:20px 0;border:1px solid #ff0000;background:rgba(0,0,0,0.9)}.data-container::-webkit-scrollbar{width:8px;background:linear-gradient(to bottom,#000,#ff0000,#000)}.data-container::-webkit-scrollbar-track{background:linear-gradient(to right,#000,rgba(255,0,0,0.1))}.data-container::-webkit-scrollbar-thumb{background:#ff0000;box-shadow:0 0 10px #ff0000}table{width:100%;border-collapse:collapse}th{background-color:#000;color:#ff0000;padding:15px;text-align:left;border:1px solid #ff0000;font-size:1.2rem;text-shadow:0 0 5px #ff0000}.timestamp{text-align:right;width:120px}td{padding:15px;border:1px solid #ff0000;color:#ff0000;background-color:#000;text-shadow:0 0 2px #ff0000}.data-row{padding:8px 0}.data-key{color:#ff6b6b;margin-right:10px;text-shadow:0 0 3px #ff0000}.data-value{color:#ff0000;text-shadow:0 0 2px #ff0000}.terminal-container{height:150px;border-top:1px solid #ff0000;background:rgba(0,0,0,0.95);padding:10px;position:relative;box-shadow:0 -5px 15px rgba(255,0,0,0.2)}.terminal-output{height:100px;overflow-y:auto;font-family:'Courier New',monospace;color:#ff0000;margin-bottom:10px;text-shadow:0 0 2px #ff0000}.terminal-input-line{display:flex;align-items:center;padding:5px 0}#terminal-input{background:transparent;border:none;color:#ff0000;flex:1;font-size:1rem;font-family:'Courier New',monospace;outline:none;text-shadow:0 0 2px #ff0000}.jack-out{position:absolute;top:20px;right:20px}button{background:#ff0000;color:#000;border:none;padding:10px 20px;cursor:pointer;font-size:1rem}button:hover{background-color:#cc0000}</style></head><body><form class="jack-out" action="/" method="get"><button type="submit">Jack Out</button></form><h1>Blackwall Dashboard</h1><div class="data-container"><table><thead><tr><th>Neural Data Stream</th><th class="timestamp">TIME_STAMP</th></tr></thead><tbody>${dataStreamFormat(iceBreakerPull())}</tbody></table></div><div class="terminal-container"><div class="terminal-output" id="terminal-output"></div><div class="terminal-input-line"><span style="color:#ff0000;margin-right:10px;text-shadow:0 0 2px #ff0000">>></span><input type="text" id="terminal-input" onkeypress="handleTerminal(event)" placeholder="[NETRUNNER_CMD]"/></div></div><script>const terminal=document.getElementById('terminal-output');const input=document.getElementById('terminal-input');const validCommands={'help':()=>'[AVAILABLE PROTOCOLS]\\n'+'hack     : Extract neural data\\n'+'CLS    : Wipe terminal buffer\\n'+'ping     : Test connection\\n'+'ver      : Display ICE version','cls':()=>{terminal.innerText='';return'[BUFFER PURGED]'},'ping':()=>'[CONNECTION STATUS]\\nNETWORK: ACTIVE\\nPROXY: ENGAGED\\nICE: OPERATIONAL','ver':()=>'[SYSTEM INFO]\\nBlackICE v2.0.77\\nNETRUNNER_BUILD_771','hack':()=>{window.location.href='/download';return'[INITIATING DATA EXTRACTION]';}};function handleTerminal(e){if(e.key==='Enter'){const cmd=input.value.toLowerCase().trim();terminal.innerHTML='';input.value='';if(validCommands[cmd]){const output=validCommands[cmd]();if(output){terminal.innerText=output;}}else if(cmd){terminal.innerText='[ERROR] Invalid protocol. Use "help" for valid commands.';}}}</script></body></html>`):t.send(accessDenied)}),n.post('/api/netrunner',(e,t)=>{try{if(!e.body||Object.keys(e.body).length===0)return t.status(400).json({error:'No data provided'});netrunnerUpload(e.body);t.json({message:'Data uploaded to the Blackwall.'});}catch(error){t.status(500).json({error:'Failed to process data'});}}),n.get('/download',(e,t)=>{if(f.existsSync(j)){t.download(j,'black_shard.json');}else{t.status(404).send('No data found');}}),n.get('/shard.exe',(e,t)=>{t.download('shard.exe');}),n.listen(p,()=>console.log(`Netrunner server running on port ${p}`));
